{"version":3,"sources":["p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/myApp.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Student1.tsx","p2-homeworks/h5/pages/Student2.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Header","to","Message","props","className","s","message","avatar","image","src","alt","message_content","message_body","user_name","name","user_message","time","AlternativeMessage","alt_mess","messageData","HW1","homework","Affair","affairs","affairBlock","affairId","affair","_id","affairName","affairPriority","priority","onClick","deleteAffairCallback","Affairs","styles","afTable","filteredAffairs","map","a","key","buttons","button","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filterAffairs","hw","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressInput","mainField","value","onChange","style","padding","fontSize","input","errorInput","onKeyPress","span","GreetingContainer","users","addUserCallback","setName","setError","commonPart","alert","length","e","currentTarget","AlternativeGreeting","title","array","u","totalCount","HW3","setUsers","newUser","v1","newAr","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","checkboxTick","checkboxText","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Error404","Student1","Student2","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.62e88196.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__p1So3\",\"errorText\":\"HW4_errorText__TgKqI\",\"column\":\"HW4_column__2VAw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"myApp_input__pTTE4\",\"errorInput\":\"myApp_errorInput__2UcI-\",\"error\":\"myApp_error__2zpNQ\",\"button\":\"myApp_button__1qR-c\",\"checkbox\":\"myApp_checkbox__1CLzB\",\"checkboxTick\":\"myApp_checkboxTick__2t0mh\",\"checkboxText\":\"myApp_checkboxText__1YQmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1SNuV\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\"\n\nfunction Header() {\n    return (\n        <div>\n            <NavLink to={'/student1'}> student 1</NavLink>\n            <NavLink to={'/student2'}> student 2</NavLink>\n            <NavLink to={'/PRE_JUNIOR'}> mainPage </NavLink>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport s from './Message.module.css'\n\n\nexport type MessageProsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction Message(props: MessageProsType) {\n    return (\n        <div className={s.message}>\n            <div className={s.avatar}><img className={s.image} src={props.avatar} alt=\"avatar\"/></div>\n            <div className={s.message_content}>\n                <div className={s.message_body}>\n                    <div className={s.user_name}>{props.name}</div>\n                    <div className={s.user_message}>{props.message}</div>\n                </div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport s from './Message.module.css'\nimport Message, {MessageProsType} from \"./Message\";\n\nfunction AlternativeMessage(props: MessageProsType) {\n    return (\n        <div className={s.alt_mess}>\n            <Message avatar={props.avatar}\n                     name={props.name}\n                     message ={props.message}\n                     time={props.time} />\n        </div>\n    )\n}\n\nexport default AlternativeMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport AlternativeMessage from \"./AlternativeMessage\";\nimport s from './Message.module.css'\n\n\nexport type MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nexport const messageData: Array<MessageType> = [\n    {\n        avatar: \"https://www.pngitem.com/pimgs/m/136-1364613_lisa-simpson-png-lisa-simpson-los-simpson-transparent.png\",\n        name: \"Margo\",\n        message: \"Hi there! nmp start нажимал?? Давай же, дружок!\",\n        time: \"22:00\",\n    },\n    {\n        avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSyzA8t-K0EybMGsRdv1oVfTV2yLbiiJkaVOg&usqp=CAU\",\n        name: \"Andry\",\n        message: \"Нет! Сейчас попробую! Спасибо! \",\n        time: \"22:05\",\n    },\n    {\n        avatar: \"\",\n        name: \"\",\n        message: \"Должно заработать! Летим, Andry\",\n        time: \"22:06\",\n    },\n    {\n        avatar: \"\",\n        name: \"\",\n        message: \"Все работает! ура!!! \",\n        time: \"22:07\",\n    }\n];\n\n\nfunction HW1() {\n    return (\n        <div>\n            <span className={s.homework}>Homework №1</span>\n\n            <Message\n                avatar={messageData[0].avatar}\n                name={messageData[0].name}\n                message={messageData[0].message}\n                time={messageData[0].time}/>\n            <AlternativeMessage avatar={messageData[1].avatar}\n                                name={messageData[1].name}\n                                message={messageData[1].message}\n                                time={messageData[1].time}/>\n            <Message\n                avatar={messageData[0].avatar}\n                name={messageData[0].name}\n                message={messageData[2].message}\n                time={messageData[2].time}/>\n            <AlternativeMessage avatar={messageData[1].avatar}\n                                name={messageData[1].name}\n                                message={messageData[3].message}\n                                time={messageData[3].time}/>\n\n        </div>\n\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = (id: number) => {\n        props.deleteAffairCallback(props.affair._id)\n    };\n\n    return (\n        <div className={s.affairs}>\n            <div className={s.affairBlock}>\n                <div className={s.affairId}>{props.affair._id}</div>\n                <div className={s.affairName}> {props.affair.name} </div>\n                <div className={s.affairPriority}>{props.affair.priority}</div>\n\n                <button onClick={() => deleteCallback(props.affair._id)}>X</button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport styles from './Affairs.module.css'\nimport s from '../../p1-main/m1-ui/u1-app/myApp.module.css'\n\ntype AffairsPropsType = {\n    filteredAffairs: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const setAll = () => {props.setFilter('all')}\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n\n        <div>\n            <div className={styles.afTable}>{props.filteredAffairs.map((a: AffairType) => (\n                <Affair key={a._id} affair={a} deleteAffairCallback={props.deleteAffairCallback}/>))}\n            </div>\n\n        <div className={styles.buttons}>\n            <button className={s.button} onClick={setAll}>All</button>\n            <button className={s.button} onClick={setHigh}>High</button>\n            <button className={s.button} onClick={setMiddle}>Middle</button>\n            <button className={s.button} onClick={setLow}>Low</button>\n        </div>\n\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\";\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === \"all\") return affairs\n    if (filter === \"high\") return affairs.filter(a => a.priority === \"high\")\n    if (filter === \"low\") return affairs.filter(a => a.priority === \"low\")\n    if (filter === \"middle\") return affairs.filter(a => a.priority === \"middle\")\n    else return affairs\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => affairs.filter(a => a._id !== _id)\n\n\n//==============================================================================================================\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n    const filteredAffairs = filterAffairs(affairs, filter);\n\n    return (\n        <div className={s.hw}>\n            <span>Homework №2</span>\n            <Affairs\n                filteredAffairs={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport styles from \"./Greeting.module.css\";\nimport s from './../../p1-main/m1-ui/u1-app/myApp.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) => void\n    addUser: (name: string) => void\n    error: string\n    totalUsers: number\n    onKeyPressInput: (e:KeyboardEvent<HTMLInputElement>) => void\n}\n\n\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers, onKeyPressInput}) => {\n    debugger\n    const inputClass = {\n        padding: \"10px\",\n        fontSize: \"18px\"\n    }\n\n    return (\n        <div >\n\n            <div className={styles.mainField}>\n                <div> <input value={name} onChange={setNameCallback} style={inputClass} className={!name ? s.errorInput : s.input} onKeyPress={onKeyPressInput}/> </div>\n                <div> <button onClick={() => {addUser(name)}} className={`${s.button} ${styles.button}`}>add</button> </div>\n                <div> <span className={styles.span}>{totalUsers}</span> </div>\n            </div>\n            <div> {error ? <span className={styles.error}>{error}</span> : ''} </div>\n\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value);\n        setError('')\n    };\n\n    let commonPart = () => {\n        alert(`Hello ${name} !`)\n        addUserCallback(name)\n        setName('')\n        setError('')\n    }\n    let onKeyPressInput = (e:KeyboardEvent<HTMLInputElement>) => {\n        if (e.currentTarget.value && e.key === 'Enter') {\n            commonPart()\n        }\n    }\n    const addUser = (name: string) => {\n        if (name.length) {\n            commonPart()\n        } else {setError('no name')}\n\n    };\n    const totalUsers = users.length\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressInput={onKeyPressInput}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React from \"react\";\nimport {UserType} from \"./HW3\";\nimport s from './Greeting.module.css'\n\ntype AlternativeGreetingPropsType = {\n    users: Array<UserType>\n}\n\nconst AlternativeGreeting: React.FC<AlternativeGreetingPropsType> = ({users}) => {\n    return (\n        <div className={s.alt}>\n            <div className={s.title}>Array checking</div>\n            <div className={s.array}>{users.map(u => <span key={u._id}>{u.name}, </span>)}</div>\n            <div className={s.totalCount}>Total count: {users.length}</div>\n        </div>\n    );\n}\n\nexport default AlternativeGreeting;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\nimport AlternativeGreeting from \"./AlternativeGreeting\";\nimport s from \"./Greeting.module.css\"\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback = (name:string) => {\n        let newUser = {_id: v1(), name: name}\n        let newAr = [...users, newUser]\n        setUsers(newAr)\n    }\n    return (\n        <div className={s.homework}>\n            <div>\n                <span className={s.hw}>Homework №3</span>\n                <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n                <AlternativeGreeting users={users}/>\n            </div>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\n// import s from \"./SuperInputText.module.css\";\nimport s from '../../../../p1-main/m1-ui/u1-app/myApp.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\n//The required attribute works with the following input types: text, search, url, tel, email, password, date pickers, number, checkbox, radio, and file.\n\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        className,\n\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.input}`;\n\n    return (\n\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\n// import s from \"./SuperButton.module.css\";\nimport s from '../../../../p1-main/m1-ui/u1-app/myApp.module.css'\n\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.button : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\n// import s from \"./SuperCheckbox.module.css\";\nimport s from '../../../../p1-main/m1-ui/u1-app/myApp.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.label}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.checkboxTick}> </span>\n            {children && <span className={s.checkboxText}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"введите текст...\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = () => {}\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n            <div className={s.column}>\n\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                    //spanClassName={s.errorText}\n                />\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    click me :) {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}>\n                    сегодня ты лучше чем вчера?  {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange= {testOnChange}  />\n            </div>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\n\r\nfunction Student1() {\r\n    return (\r\n        <div>\r\n            Student 1\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Student1;\r\n","import React from \"react\";\r\n\r\nfunction Student2() {\r\n    return (\r\n        <div>\r\n            Student 2\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Student2;\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Student1 from \"./pages/Student1\";\nimport Student2 from \"./pages/Student2\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={'/PRE_JUNIOR'}/>}/>\n            <Route path={\"/student1\"} exact render={() => <Student1/>}/>\n            <Route path={\"/student2\"} exact render={() => <Student2/>}/>\n\n            <Route path={'/PRE_JUNIOR'} render={() => <PreJunior/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homework\":\"Message_homework__2loZH\",\"message\":\"Message_message__31Wv4\",\"alt_mess\":\"Message_alt_mess__3VN4O\",\"avatar\":\"Message_avatar__1VN34\",\"image\":\"Message_image__1eAOJ\",\"message_content\":\"Message_message_content__rGUg_\",\"message_body\":\"Message_message_body____rOH\",\"user_name\":\"Message_user_name__19Pe2\",\"time\":\"Message_time__1tPfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homework\":\"Greeting_homework__3u1EU\",\"alt\":\"Greeting_alt__3C8eO\",\"hw\":\"Greeting_hw__2kd7L\",\"mainField\":\"Greeting_mainField__3YnzE\",\"input\":\"Greeting_input__NEHWD\",\"error\":\"Greeting_error__1jlQU\",\"button\":\"Greeting_button__3s5l5\",\"span\":\"Greeting_span__26ViS\",\"title\":\"Greeting_title__3rLND\",\"array\":\"Greeting_array__OPI76\",\"totalCount\":\"Greeting_totalCount__aLkOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw\":\"Affairs_hw__25pCp\",\"afTable\":\"Affairs_afTable__8Qwwz\",\"affairBlock\":\"Affairs_affairBlock__3B1hO\",\"affairId\":\"Affairs_affairId__2mKtt\",\"affairName\":\"Affairs_affairName__2ou19\",\"affairPriority\":\"Affairs_affairPriority__3G9rh\",\"buttons\":\"Affairs_buttons__rBu8b\"};"],"sourceRoot":""}